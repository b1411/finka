'use client';

import { useEffect, useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Download, FileText, Briefcase, Calculator } from 'lucide-react';
import { seedReferenceData } from '@/lib/seed-data';
import { calculateContingentStats, initializeDemoData } from '@/lib/demo-data';

interface SystemStatus {
  isInitialized: boolean;
  recordCount: number;
  lastUpdated: Date | null;
}

export default function SystemInfoPage() {
  const [systemStatus, setSystemStatus] = useState<SystemStatus>({
    isInitialized: false,
    recordCount: 0,
    lastUpdated: null
  });
  const [stats, setStats] = useState<any>(null);
  const [isLoading, setIsLoading] = useState(false);

  useEffect(() => {
    checkSystemStatus();
  }, []);

  const checkSystemStatus = async () => {
    try {
      const statsResult = await calculateContingentStats();
      if (statsResult) {
        setStats(statsResult);
        setSystemStatus({
          isInitialized: statsResult.totalStudents > 0,
          recordCount: statsResult.totalStudents,
          lastUpdated: new Date()
        });
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã:', error);
    }
  };

  const initializeSystem = async () => {
    setIsLoading(true);
    try {
      await seedReferenceData();
      await initializeDemoData();
      await checkSystemStatus();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    } finally {
      setIsLoading(false);
    }
  };

  const exportData = () => {
    const dataToExport = {
      timestamp: new Date().toISOString(),
      version: '1.0.0',
      stats: stats,
      metadata: {
        generated_by: '–§–ò–ù–ö–ê MVP',
        description: '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–æ–º –†–§–ú–®'
      }
    };

    const blob = new Blob([JSON.stringify(dataToExport, null, 2)], {
      type: 'application/json'
    });
    
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `finka_demo_data_${new Date().toISOString().split('T')[0]}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="min-h-screen bg-gray-50 p-4">
      <div className="container mx-auto max-w-4xl">
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            üéØ –§–ò–ù–ö–ê MVP
          </h1>
          <p className="text-xl text-gray-600 mb-2">
            –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–æ–º –†–§–ú–®
          </p>
          <Badge variant="outline" className="text-sm">
            –í–µ—Ä—Å–∏—è 1.0 | MVP Demo
          </Badge>
        </div>

        {/* –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Briefcase className="w-5 h-5 mr-2" />
              –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="text-center p-4 bg-blue-50 rounded-lg">
                <p className="text-sm text-gray-600">–°—Ç–∞—Ç—É—Å</p>
                <p className={`text-lg font-semibold ${systemStatus.isInitialized ? 'text-green-600' : 'text-orange-600'}`}>
                  {systemStatus.isInitialized ? '‚úÖ –ì–æ—Ç–æ–≤' : '‚è≥ –ù–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω'}
                </p>
              </div>
              <div className="text-center p-4 bg-green-50 rounded-lg">
                <p className="text-sm text-gray-600">–ó–∞–ø–∏—Å–µ–π –¥–∞–Ω–Ω—ã—Ö</p>
                <p className="text-lg font-semibold text-green-600">
                  {systemStatus.recordCount}
                </p>
              </div>
              <div className="text-center p-4 bg-purple-50 rounded-lg">
                <p className="text-sm text-gray-600">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ</p>
                <p className="text-lg font-semibold text-purple-600">
                  {systemStatus.lastUpdated ? 
                    systemStatus.lastUpdated.toLocaleString('ru-RU') : 
                    '–ù–∏–∫–æ–≥–¥–∞'
                  }
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        {stats && (
          <Card className="mb-6">
            <CardHeader>
              <CardTitle className="flex items-center">
                <Calculator className="w-5 h-5 mr-2" />
                –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <h4 className="font-semibold mb-3">–ü–æ —Ñ–∏–ª–∏–∞–ª–∞–º:</h4>
                    {Object.entries(stats.byOrgUnit).map(([orgUnit, data]: [string, any]) => (
                      <div key={orgUnit} className="flex justify-between items-center py-2 border-b">
                        <span className="font-medium">{orgUnit}</span>
                        <div className="text-right">
                          <div>{data.students} —á–µ–ª.</div>
                          <div className="text-sm text-gray-500">
                            {data.revenue.toLocaleString()} ‚Ç∏
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                  <div>
                    <h4 className="font-semibold mb-3">–ü–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:</h4>
                    {Object.entries(stats.byFundingSource).map(([source, data]: [string, any]) => (
                      <div key={source} className="flex justify-between items-center py-2 border-b">
                        <span className="font-medium">{source}</span>
                        <div className="text-right">
                          <div>{data.students} —á–µ–ª.</div>
                          <div className="text-sm text-gray-500">
                            {data.revenue.toLocaleString()} ‚Ç∏
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <FileText className="w-5 h-5 mr-2" />
              –î–µ–π—Å—Ç–≤–∏—è
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <Button 
                onClick={initializeSystem}
                disabled={isLoading}
                className="h-auto p-4 flex-col space-y-2"
              >
                <Briefcase className="w-6 h-6" />
                <span>{isLoading ? '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...' : '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É'}</span>
                <span className="text-xs opacity-75">
                  –°–æ–∑–¥–∞—Ç—å –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
                </span>
              </Button>

              <Button 
                variant="outline"
                onClick={exportData}
                disabled={!systemStatus.isInitialized}
                className="h-auto p-4 flex-col space-y-2"
              >
                <Download className="w-6 h-6" />
                <span>–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</span>
                <span className="text-xs opacity-75">
                  –°–∫–∞—á–∞—Ç—å JSON —Å –¥–µ–º–æ –¥–∞–Ω–Ω—ã–º–∏
                </span>
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ MVP */}
        <Card className="mt-6">
          <CardHeader>
            <CardTitle>–û —Å–∏—Å—Ç–µ–º–µ –§–ò–ù–ö–ê MVP</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="prose prose-sm max-w-none">
              <p className="mb-4">
                <strong>–§–ò–ù–ö–ê</strong> ‚Äî —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–æ–º —Ñ–∏–ª–∏–∞–ª–æ–≤ 
                –†–µ—Å–ø—É–±–ª–∏–∫–∞–Ω—Å–∫–æ–π —Ñ–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —à–∫–æ–ª—ã (–†–§–ú–®). 
                MVP –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
              </p>
              
              <h4 className="font-semibold mb-2">–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:</h4>
              <ul className="list-disc pl-6 space-y-1">
                <li><strong>–î–æ—Ö–æ–¥—ã:</strong> –ö–æ–Ω—Ç–∏–Ω–≥–µ–Ω—Ç, –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è, –≥—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π</li>
                <li><strong>–§–û–¢:</strong> –®—Ç–∞—Ç, —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è, –ø—Ä–µ–º–∏–∏, –Ω–∞–ª–æ–≥–∏</li>
                <li><strong>OPEX:</strong> –ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏, –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ, –ø—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã</li>
                <li><strong>–î–∞—à–±–æ—Ä–¥ HQ:</strong> P&L, CashFlow, Payroll, —Å—Ä–∞–≤–Ω–µ–Ω–∏—è</li>
              </ul>

              <h4 className="font-semibold mb-2 mt-4">–†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</h4>
              <ul className="list-disc pl-6 space-y-1">
                <li><strong>–≠–∫–æ–Ω–æ–º–∏—Å—Ç —Ñ–∏–ª–∏–∞–ª–∞:</strong> –í–≤–æ–¥ –¥–æ—Ö–æ–¥–æ–≤ –∏ OPEX</li>
                <li><strong>–ë—É—Ö–≥–∞–ª—Ç–µ—Ä —Ñ–∏–ª–∏–∞–ª–∞:</strong> –ì—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π, –Ω–∞–ª–æ–≥–∏</li>
                <li><strong>HR —Ñ–∏–ª–∏–∞–ª–∞:</strong> –®—Ç–∞—Ç, —Ç–∞—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è</li>
                <li><strong>–ì–ª–∞–≤–Ω—ã–π —ç–∫–æ–Ω–æ–º–∏—Å—Ç:</strong> –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è, –ø–ª–∞–Ω—ã</li>
                <li><strong>–ü—Ä–∞–≤–ª–µ–Ω–∏–µ:</strong> –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏</li>
              </ul>

              <div className="mt-4 p-4 bg-blue-50 rounded-lg">
                <p className="text-sm text-blue-800">
                  <strong>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –≠—Ç–æ MVP –≤–µ—Ä—Å–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ. 
                  –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è –±—É–¥–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î, 
                  —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}